#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>

// Config WiFi
const char* ssid = "cavalo de troia";
const char* password = "franscisca49";

// Config MQTT
const char* mqtt_server = "broker.hivemq.com";
const int mqtt_port = 1883;
const char* mqtt_topic = "nivel/sensores";

WiFiClient espClient;
PubSubClient client(espClient);

// Pino do motor (relé ou driver)
const int motorPin = 2;  // GPIO2 (D4 no ESP01)

void setup_wifi() {
  delay(10);
  WiFi.begin(ssid, password);
  Serial.print("Conectando");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Conectado ao WiFi");
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Mensagem recebida: ");
  payload[length] = '\0'; 
  String msg = String((char*)payload);
  Serial.println(msg);

  StaticJsonDocument<100> doc;
  DeserializationError error = deserializeJson(doc, msg);

  if (error) {
    Serial.println("Erro ao fazer parse do JSON");
    return;
  }

  int nivel1 = doc["nivel1"];

  // Lógica do motor
  if (nivel1 == 0) {
    digitalWrite(motorPin, LOW);  // iga o motor
  } else {
    digitalWrite(motorPin, HIGH);   // liga o motor
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Conectando ao MQTT...");
    if (client.connect("ESP01MotorClient")) {
      Serial.println("Conectado");
      client.subscribe(mqtt_topic);
    } else {
      Serial.print("Falhou, rc=");
      Serial.print(client.state());
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(motorPin, OUTPUT);
  digitalWrite(motorPin, LOW);  // Motor inicialmente desligado

  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
